{"pages":[{"title":"404","text":"","link":"/404.html"}],"posts":[{"title":"Workaround for oracle weblogic install error —— Cyclic dependency detected among featureset libraries","text":"BriefThis is the workaround for resolving errors during weblogic installation, below are details and resolving steps. 1. Problem descriptionWhen installing weblogic 12.2.1.4, we may facing the problem during progress ‘Generating Libraries’. The error message is java.lang.Exception: oracle.sysman.oii.oiif.oiifb.OiifbEndIterateException:com.oracle.cie.gdr.libraries.LibraryHandlerException:Cyclic dependency detected among featureset libraries:[C:\\Oracle\\Middleware\\Oracle_Home\\server\\lib\\wljmsclient.jar,C:\\Oracle\\Middleware\\Oracle_Home\\server\\lib\\wljmxclient.jar] 2. Resolving steps This workaround is a Trick to skip Cyclic dependency check for ‘wljmsclient.jar’ and ‘wljmxclient.jar’, after the installation completed, add back these two libraries. Go to the install package folder. Unzip the jar file. Using command line to retrieve string ‘wljmsclient.jar’, ‘wljmxclient.jar’ under the extract folder to get details about this two libraries.123findstr /s /i /n \"wljmsclient.jar\" *.*findstr /s /i /n \"wljmxclient.jar\" *.* We can find out that the libraries are referenced in wls_sharedLibraries_12.2.1.4.0.xml under folder ~\\Disk1\\stage\\featuresets Go to folder ~\\Disk1\\stage\\featuresets and find file wls_sharedLibraries_12.2.1.4.0.xml Open the file wls_sharedLibraries_12.2.1.4.0.xml and find lines for libraries ‘wljmsclient.jar’, ‘wljmxclient.jar’. Commented out these lines in xml and save the xml. Go back to folder ~\\Disk1\\install, run the .ng.cmd script as administrator The installation cmd is running The weblogic installer will be launched and follow the installation steps. Installation completed successfully. Go to the target folder, find wls_sharedLibraries_12.2.1.4.0.xml under ~/Oracle/Middleware/Oracle_Home/inventory/featuresets Open wls_sharedLibraries_12.2.1.4.0.xml and we can find out that libraries info for ‘wljmsclient.jar’, ‘wljmxclient.jar’ are not there (Because we commnet out the code when installation). Add these info back. Go to ~/Oracle/Middleware/Oracle_Home/wlserver/server/lib Compared with successfully installed case, we can know that libraries ‘wlclient.jar’ and ‘wljmxclient.jar’ are missing due to the comment out code. Add these two libraries back to folder. I copied these two libraries from a successfully installed case, because I installed weblogic in several machines and only some of them have this Cyclic dependency check problem, if you don’t have these two libraries in your hands, you can get them from internet. http://find-files.com/ Done.","link":"/2020/02/03/Workaround%20for%20oracle%20weblogic%20install%20error/"},{"title":"Hexo + GitPages Blog Tutorial(教程)","text":"BriefThis tutorial is for building free static blogs by using Hexo and Github Pages. We will start at environments set up, customise blog pages, add source project in version control and install plugins for futher features like comments. What is HexoHexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other markup languages) and Hexo generates static files with a beautiful theme in seconds. What is Github PagesGitHub Pages is a static web hosting service offered by GitHub since 2008 to GitHub users for hosting user blogs, project documentation, or even whole books created as a page. InstallationIt only takes less than one hour to set up enviroments and get your first blog page deployed. If you encounter a problem, please refer https://hexo.io/docs/ Requirements Git Node.js If your computer already has these, congratulations! You can skip to the install Hexo step. Install Git Windows: Download & install git. Mac: Install it with Homebrew, MacPorts or installer. Linux (Ubuntu, Debian):1sudo apt-get install git-core Linux (Fedora, Red Hat, CentOS):1sudo yum install git-core Run CMD check git was installed successfully: git --version Generate SSH Key for GithubRun git bash from Menu Config your git global settings: 12git config --global user.name \"your GitHub username\"git config --global user.email \"your GitHub regist email\" Generate ssh key: 1ssh-keygen -t rsa -C \"your GitHub regist email\" Press ‘Enter’ three times, no need password by default, find id_rsa.pub key in generated .ssh folder, copy the whole content in this file. Go to github setting keys page, click New SSH Key Title can be any value, copy the content of id_rsa.pub into Key, then click Add SSH Key. Go to git bash, use command ssh git@github.com to verify the key is successfully configured: Install Node.jsNode.js Official Installer WindowsIf you use the official installer, make sure Add to PATH is checked (it’s checked by default). Mac / LinuxIf you encounter EACCES permission error when trying to install Hexo, please follow the workaround provided by npmjs; overriding with root/sudo is highly discouraged. Run CMD check node.js was installed successfully: node -v npm will be installed by default when installing node.js, if not, please install npm also. Run CMD check npm was installed successfully: npm -v Install HexoOnce all the requirements are installed, you can start to install Hexo. Create a folder in your local PC, we will install Hexo frame in this folder and the blog pages will also be published in this folder. Shift + right click in folder. Open command window here. 3.Use npm command to install Hexo: 1npm install -g hexo-cli Init Blog FilesAfter the installation finished. Use following command in same folder to init blog: 1hexo init blog Using following commands to verify the generated blog files 12345hexo new test_my_sitehexo ghexo s The blog will run on local server, we can preview it on browser http://localhost:4000 Create Github RepositoryWe need to create one Github Pages repository for deploying blog web files. Login github, create a new repository, The ==== in repository name must be exactly same as highlighted your login name: When the repository is created, go to repository settings: Scroll down the page, config source branch abd choose a theme: By click the provided link, you can view your github pages in browser. Deploy blog to Github PagesOpen the _config.yml file under your blog root folder, update the deploy config as follow: 1234deploy: type: git repository: https://github.com/username/username.github.io.git branch: master Run CMD in this folder, using npm command to install deployment plugins: 1npm install hexo-deployer-git --save Then using following three hexo commands to deploy your blog on your github pages: 123hexo clean hexo g hexo d Finally, your can access your blog by url: 1username.github.io","link":"/2019/12/19/Hexo-GitPages-Blog-Tutorial-%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"Oracle Weblogic","slug":"Oracle-Weblogic","link":"/tags/Oracle-Weblogic/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"workaround","slug":"workaround","link":"/categories/workaround/"}]}